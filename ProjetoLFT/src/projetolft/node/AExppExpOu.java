/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class AExppExpOu extends PExpOu
{
    private PExpOu _expOu_;
    private TOu _ou_;
    private PFatorA _fatorA_;

    public AExppExpOu()
    {
        // Constructor
    }

    public AExppExpOu(
        @SuppressWarnings("hiding") PExpOu _expOu_,
        @SuppressWarnings("hiding") TOu _ou_,
        @SuppressWarnings("hiding") PFatorA _fatorA_)
    {
        // Constructor
        setExpOu(_expOu_);

        setOu(_ou_);

        setFatorA(_fatorA_);

    }

    @Override
    public Object clone()
    {
        return new AExppExpOu(
            cloneNode(this._expOu_),
            cloneNode(this._ou_),
            cloneNode(this._fatorA_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExppExpOu(this);
    }

    public PExpOu getExpOu()
    {
        return this._expOu_;
    }

    public void setExpOu(PExpOu node)
    {
        if(this._expOu_ != null)
        {
            this._expOu_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expOu_ = node;
    }

    public TOu getOu()
    {
        return this._ou_;
    }

    public void setOu(TOu node)
    {
        if(this._ou_ != null)
        {
            this._ou_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ou_ = node;
    }

    public PFatorA getFatorA()
    {
        return this._fatorA_;
    }

    public void setFatorA(PFatorA node)
    {
        if(this._fatorA_ != null)
        {
            this._fatorA_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fatorA_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expOu_)
            + toString(this._ou_)
            + toString(this._fatorA_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expOu_ == child)
        {
            this._expOu_ = null;
            return;
        }

        if(this._ou_ == child)
        {
            this._ou_ = null;
            return;
        }

        if(this._fatorA_ == child)
        {
            this._fatorA_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expOu_ == oldChild)
        {
            setExpOu((PExpOu) newChild);
            return;
        }

        if(this._ou_ == oldChild)
        {
            setOu((TOu) newChild);
            return;
        }

        if(this._fatorA_ == oldChild)
        {
            setFatorA((PFatorA) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
