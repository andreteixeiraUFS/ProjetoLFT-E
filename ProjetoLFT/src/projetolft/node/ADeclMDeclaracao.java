/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class ADeclMDeclaracao extends PDeclaracao
{
    private PTipoVariavel _tipoVariavel_;
    private TDoisPontos _doisPontos_;
    private PDeclM _declM_;
    private TPontoVirgula _pontoVirgula_;

    public ADeclMDeclaracao()
    {
        // Constructor
    }

    public ADeclMDeclaracao(
        @SuppressWarnings("hiding") PTipoVariavel _tipoVariavel_,
        @SuppressWarnings("hiding") TDoisPontos _doisPontos_,
        @SuppressWarnings("hiding") PDeclM _declM_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setTipoVariavel(_tipoVariavel_);

        setDoisPontos(_doisPontos_);

        setDeclM(_declM_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new ADeclMDeclaracao(
            cloneNode(this._tipoVariavel_),
            cloneNode(this._doisPontos_),
            cloneNode(this._declM_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclMDeclaracao(this);
    }

    public PTipoVariavel getTipoVariavel()
    {
        return this._tipoVariavel_;
    }

    public void setTipoVariavel(PTipoVariavel node)
    {
        if(this._tipoVariavel_ != null)
        {
            this._tipoVariavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoVariavel_ = node;
    }

    public TDoisPontos getDoisPontos()
    {
        return this._doisPontos_;
    }

    public void setDoisPontos(TDoisPontos node)
    {
        if(this._doisPontos_ != null)
        {
            this._doisPontos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doisPontos_ = node;
    }

    public PDeclM getDeclM()
    {
        return this._declM_;
    }

    public void setDeclM(PDeclM node)
    {
        if(this._declM_ != null)
        {
            this._declM_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declM_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tipoVariavel_)
            + toString(this._doisPontos_)
            + toString(this._declM_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tipoVariavel_ == child)
        {
            this._tipoVariavel_ = null;
            return;
        }

        if(this._doisPontos_ == child)
        {
            this._doisPontos_ = null;
            return;
        }

        if(this._declM_ == child)
        {
            this._declM_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tipoVariavel_ == oldChild)
        {
            setTipoVariavel((PTipoVariavel) newChild);
            return;
        }

        if(this._doisPontos_ == oldChild)
        {
            setDoisPontos((TDoisPontos) newChild);
            return;
        }

        if(this._declM_ == oldChild)
        {
            setDeclM((PDeclM) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
