/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class AMultipleExpXor extends PExpXor
{
    private PExpXor _expXor_;
    private TXor _xor_;
    private PAuxXor _auxXor_;

    public AMultipleExpXor()
    {
        // Constructor
    }

    public AMultipleExpXor(
        @SuppressWarnings("hiding") PExpXor _expXor_,
        @SuppressWarnings("hiding") TXor _xor_,
        @SuppressWarnings("hiding") PAuxXor _auxXor_)
    {
        // Constructor
        setExpXor(_expXor_);

        setXor(_xor_);

        setAuxXor(_auxXor_);

    }

    @Override
    public Object clone()
    {
        return new AMultipleExpXor(
            cloneNode(this._expXor_),
            cloneNode(this._xor_),
            cloneNode(this._auxXor_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultipleExpXor(this);
    }

    public PExpXor getExpXor()
    {
        return this._expXor_;
    }

    public void setExpXor(PExpXor node)
    {
        if(this._expXor_ != null)
        {
            this._expXor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expXor_ = node;
    }

    public TXor getXor()
    {
        return this._xor_;
    }

    public void setXor(TXor node)
    {
        if(this._xor_ != null)
        {
            this._xor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xor_ = node;
    }

    public PAuxXor getAuxXor()
    {
        return this._auxXor_;
    }

    public void setAuxXor(PAuxXor node)
    {
        if(this._auxXor_ != null)
        {
            this._auxXor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._auxXor_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expXor_)
            + toString(this._xor_)
            + toString(this._auxXor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expXor_ == child)
        {
            this._expXor_ = null;
            return;
        }

        if(this._xor_ == child)
        {
            this._xor_ = null;
            return;
        }

        if(this._auxXor_ == child)
        {
            this._auxXor_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expXor_ == oldChild)
        {
            setExpXor((PExpXor) newChild);
            return;
        }

        if(this._xor_ == oldChild)
        {
            setXor((TXor) newChild);
            return;
        }

        if(this._auxXor_ == oldChild)
        {
            setAuxXor((PAuxXor) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
