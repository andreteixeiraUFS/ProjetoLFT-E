/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class ATerm2TermoExpl extends PTermoExpl
{
    private PTermoExpl _termoExpl_;
    private TXor _xor_;
    private PTermoExp _termoExp_;

    public ATerm2TermoExpl()
    {
        // Constructor
    }

    public ATerm2TermoExpl(
        @SuppressWarnings("hiding") PTermoExpl _termoExpl_,
        @SuppressWarnings("hiding") TXor _xor_,
        @SuppressWarnings("hiding") PTermoExp _termoExp_)
    {
        // Constructor
        setTermoExpl(_termoExpl_);

        setXor(_xor_);

        setTermoExp(_termoExp_);

    }

    @Override
    public Object clone()
    {
        return new ATerm2TermoExpl(
            cloneNode(this._termoExpl_),
            cloneNode(this._xor_),
            cloneNode(this._termoExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATerm2TermoExpl(this);
    }

    public PTermoExpl getTermoExpl()
    {
        return this._termoExpl_;
    }

    public void setTermoExpl(PTermoExpl node)
    {
        if(this._termoExpl_ != null)
        {
            this._termoExpl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termoExpl_ = node;
    }

    public TXor getXor()
    {
        return this._xor_;
    }

    public void setXor(TXor node)
    {
        if(this._xor_ != null)
        {
            this._xor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xor_ = node;
    }

    public PTermoExp getTermoExp()
    {
        return this._termoExp_;
    }

    public void setTermoExp(PTermoExp node)
    {
        if(this._termoExp_ != null)
        {
            this._termoExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termoExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._termoExpl_)
            + toString(this._xor_)
            + toString(this._termoExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._termoExpl_ == child)
        {
            this._termoExpl_ = null;
            return;
        }

        if(this._xor_ == child)
        {
            this._xor_ = null;
            return;
        }

        if(this._termoExp_ == child)
        {
            this._termoExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._termoExpl_ == oldChild)
        {
            setTermoExpl((PTermoExpl) newChild);
            return;
        }

        if(this._xor_ == oldChild)
        {
            setXor((TXor) newChild);
            return;
        }

        if(this._termoExp_ == oldChild)
        {
            setTermoExp((PTermoExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
