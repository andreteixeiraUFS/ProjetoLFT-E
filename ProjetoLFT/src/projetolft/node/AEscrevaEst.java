/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class AEscrevaEst extends PEscrevaEst
{
    private PEscrevaM _escrevaM_;

    public AEscrevaEst()
    {
        // Constructor
    }

    public AEscrevaEst(
        @SuppressWarnings("hiding") PEscrevaM _escrevaM_)
    {
        // Constructor
        setEscrevaM(_escrevaM_);

    }

    @Override
    public Object clone()
    {
        return new AEscrevaEst(
            cloneNode(this._escrevaM_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEscrevaEst(this);
    }

    public PEscrevaM getEscrevaM()
    {
        return this._escrevaM_;
    }

    public void setEscrevaM(PEscrevaM node)
    {
        if(this._escrevaM_ != null)
        {
            this._escrevaM_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._escrevaM_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._escrevaM_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._escrevaM_ == child)
        {
            this._escrevaM_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._escrevaM_ == oldChild)
        {
            setEscrevaM((PEscrevaM) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
