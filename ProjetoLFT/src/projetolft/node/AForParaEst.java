/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class AForParaEst extends PParaEst
{
    private TPara _para_;
    private PVariavel _variavel_;
    private TDe _de_;
    private TNumeroInt _numeroInt_;
    private PFor1 _for1_;

    public AForParaEst()
    {
        // Constructor
    }

    public AForParaEst(
        @SuppressWarnings("hiding") TPara _para_,
        @SuppressWarnings("hiding") PVariavel _variavel_,
        @SuppressWarnings("hiding") TDe _de_,
        @SuppressWarnings("hiding") TNumeroInt _numeroInt_,
        @SuppressWarnings("hiding") PFor1 _for1_)
    {
        // Constructor
        setPara(_para_);

        setVariavel(_variavel_);

        setDe(_de_);

        setNumeroInt(_numeroInt_);

        setFor1(_for1_);

    }

    @Override
    public Object clone()
    {
        return new AForParaEst(
            cloneNode(this._para_),
            cloneNode(this._variavel_),
            cloneNode(this._de_),
            cloneNode(this._numeroInt_),
            cloneNode(this._for1_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForParaEst(this);
    }

    public TPara getPara()
    {
        return this._para_;
    }

    public void setPara(TPara node)
    {
        if(this._para_ != null)
        {
            this._para_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._para_ = node;
    }

    public PVariavel getVariavel()
    {
        return this._variavel_;
    }

    public void setVariavel(PVariavel node)
    {
        if(this._variavel_ != null)
        {
            this._variavel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variavel_ = node;
    }

    public TDe getDe()
    {
        return this._de_;
    }

    public void setDe(TDe node)
    {
        if(this._de_ != null)
        {
            this._de_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._de_ = node;
    }

    public TNumeroInt getNumeroInt()
    {
        return this._numeroInt_;
    }

    public void setNumeroInt(TNumeroInt node)
    {
        if(this._numeroInt_ != null)
        {
            this._numeroInt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numeroInt_ = node;
    }

    public PFor1 getFor1()
    {
        return this._for1_;
    }

    public void setFor1(PFor1 node)
    {
        if(this._for1_ != null)
        {
            this._for1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._for1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._para_)
            + toString(this._variavel_)
            + toString(this._de_)
            + toString(this._numeroInt_)
            + toString(this._for1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._para_ == child)
        {
            this._para_ = null;
            return;
        }

        if(this._variavel_ == child)
        {
            this._variavel_ = null;
            return;
        }

        if(this._de_ == child)
        {
            this._de_ = null;
            return;
        }

        if(this._numeroInt_ == child)
        {
            this._numeroInt_ = null;
            return;
        }

        if(this._for1_ == child)
        {
            this._for1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._para_ == oldChild)
        {
            setPara((TPara) newChild);
            return;
        }

        if(this._variavel_ == oldChild)
        {
            setVariavel((PVariavel) newChild);
            return;
        }

        if(this._de_ == oldChild)
        {
            setDe((TDe) newChild);
            return;
        }

        if(this._numeroInt_ == oldChild)
        {
            setNumeroInt((TNumeroInt) newChild);
            return;
        }

        if(this._for1_ == oldChild)
        {
            setFor1((PFor1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
