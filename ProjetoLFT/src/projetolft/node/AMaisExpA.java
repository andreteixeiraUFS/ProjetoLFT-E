/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class AMaisExpA extends PExpA
{
    private PExpA _expA_;
    private PSomaA _somaA_;
    private PTermoA _termoA_;

    public AMaisExpA()
    {
        // Constructor
    }

    public AMaisExpA(
        @SuppressWarnings("hiding") PExpA _expA_,
        @SuppressWarnings("hiding") PSomaA _somaA_,
        @SuppressWarnings("hiding") PTermoA _termoA_)
    {
        // Constructor
        setExpA(_expA_);

        setSomaA(_somaA_);

        setTermoA(_termoA_);

    }

    @Override
    public Object clone()
    {
        return new AMaisExpA(
            cloneNode(this._expA_),
            cloneNode(this._somaA_),
            cloneNode(this._termoA_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMaisExpA(this);
    }

    public PExpA getExpA()
    {
        return this._expA_;
    }

    public void setExpA(PExpA node)
    {
        if(this._expA_ != null)
        {
            this._expA_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expA_ = node;
    }

    public PSomaA getSomaA()
    {
        return this._somaA_;
    }

    public void setSomaA(PSomaA node)
    {
        if(this._somaA_ != null)
        {
            this._somaA_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._somaA_ = node;
    }

    public PTermoA getTermoA()
    {
        return this._termoA_;
    }

    public void setTermoA(PTermoA node)
    {
        if(this._termoA_ != null)
        {
            this._termoA_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termoA_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expA_)
            + toString(this._somaA_)
            + toString(this._termoA_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expA_ == child)
        {
            this._expA_ = null;
            return;
        }

        if(this._somaA_ == child)
        {
            this._somaA_ = null;
            return;
        }

        if(this._termoA_ == child)
        {
            this._termoA_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expA_ == oldChild)
        {
            setExpA((PExpA) newChild);
            return;
        }

        if(this._somaA_ == oldChild)
        {
            setSomaA((PSomaA) newChild);
            return;
        }

        if(this._termoA_ == oldChild)
        {
            setTermoA((PTermoA) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
