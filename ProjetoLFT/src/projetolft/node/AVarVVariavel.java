/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.node;

import projetolft.analysis.*;

@SuppressWarnings("nls")
public final class AVarVVariavel extends PVariavel
{
    private TIdentificador _identificador_;
    private TColcheteEsq _colcheteEsq_;
    private TNumeroInt _numeroInt_;
    private TColcheteDir _colcheteDir_;

    public AVarVVariavel()
    {
        // Constructor
    }

    public AVarVVariavel(
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TColcheteEsq _colcheteEsq_,
        @SuppressWarnings("hiding") TNumeroInt _numeroInt_,
        @SuppressWarnings("hiding") TColcheteDir _colcheteDir_)
    {
        // Constructor
        setIdentificador(_identificador_);

        setColcheteEsq(_colcheteEsq_);

        setNumeroInt(_numeroInt_);

        setColcheteDir(_colcheteDir_);

    }

    @Override
    public Object clone()
    {
        return new AVarVVariavel(
            cloneNode(this._identificador_),
            cloneNode(this._colcheteEsq_),
            cloneNode(this._numeroInt_),
            cloneNode(this._colcheteDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarVVariavel(this);
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TColcheteEsq getColcheteEsq()
    {
        return this._colcheteEsq_;
    }

    public void setColcheteEsq(TColcheteEsq node)
    {
        if(this._colcheteEsq_ != null)
        {
            this._colcheteEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colcheteEsq_ = node;
    }

    public TNumeroInt getNumeroInt()
    {
        return this._numeroInt_;
    }

    public void setNumeroInt(TNumeroInt node)
    {
        if(this._numeroInt_ != null)
        {
            this._numeroInt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numeroInt_ = node;
    }

    public TColcheteDir getColcheteDir()
    {
        return this._colcheteDir_;
    }

    public void setColcheteDir(TColcheteDir node)
    {
        if(this._colcheteDir_ != null)
        {
            this._colcheteDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colcheteDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identificador_)
            + toString(this._colcheteEsq_)
            + toString(this._numeroInt_)
            + toString(this._colcheteDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._colcheteEsq_ == child)
        {
            this._colcheteEsq_ = null;
            return;
        }

        if(this._numeroInt_ == child)
        {
            this._numeroInt_ = null;
            return;
        }

        if(this._colcheteDir_ == child)
        {
            this._colcheteDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._colcheteEsq_ == oldChild)
        {
            setColcheteEsq((TColcheteEsq) newChild);
            return;
        }

        if(this._numeroInt_ == oldChild)
        {
            setNumeroInt((TNumeroInt) newChild);
            return;
        }

        if(this._colcheteDir_ == oldChild)
        {
            setColcheteDir((TColcheteDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
