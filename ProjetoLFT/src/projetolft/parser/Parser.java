/* This file was generated by SableCC (http://www.sablecc.org/). */

package projetolft.parser;

import projetolft.lexer.*;
import projetolft.node.*;
import projetolft.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AStartStart */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AVazio */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AProgramaEst */
            {
                ArrayList<Object> list = new2();
                push(goTo(2), list, false);
            }
            break;
            case 3: /* reduce ADeclMDeclaracao */
            {
                ArrayList<Object> list = new3();
                push(goTo(3), list, false);
            }
            break;
            case 4: /* reduce ADeclaracao */
            {
                ArrayList<Object> list = new4();
                push(goTo(3), list, false);
            }
            break;
            case 5: /* reduce ADeclS */
            {
                ArrayList<Object> list = new5();
                push(goTo(4), list, false);
            }
            break;
            case 6: /* reduce ADeclM */
            {
                ArrayList<Object> list = new6();
                push(goTo(5), list, false);
            }
            break;
            case 7: /* reduce ADeclSDeclM */
            {
                ArrayList<Object> list = new7();
                push(goTo(5), list, false);
            }
            break;
            case 8: /* reduce AVarNVariavel */
            {
                ArrayList<Object> list = new8();
                push(goTo(6), list, false);
            }
            break;
            case 9: /* reduce AVarVVariavel */
            {
                ArrayList<Object> list = new9();
                push(goTo(6), list, false);
            }
            break;
            case 10: /* reduce ANumIntValor */
            {
                ArrayList<Object> list = new10();
                push(goTo(7), list, false);
            }
            break;
            case 11: /* reduce ANumRealValor */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list, false);
            }
            break;
            case 12: /* reduce ACharValor */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list, false);
            }
            break;
            case 13: /* reduce ANumeroRealTipoVariavel */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list, false);
            }
            break;
            case 14: /* reduce ANumIntTipoVariavel */
            {
                ArrayList<Object> list = new14();
                push(goTo(8), list, false);
            }
            break;
            case 15: /* reduce ACaractereTipoVariavel */
            {
                ArrayList<Object> list = new15();
                push(goTo(8), list, false);
            }
            break;
            case 16: /* reduce AAtribui */
            {
                ArrayList<Object> list = new16();
                push(goTo(9), list, false);
            }
            break;
            case 17: /* reduce ALeiaEst */
            {
                ArrayList<Object> list = new17();
                push(goTo(10), list, false);
            }
            break;
            case 18: /* reduce ALeiaS */
            {
                ArrayList<Object> list = new18();
                push(goTo(11), list, false);
            }
            break;
            case 19: /* reduce ALeiaM */
            {
                ArrayList<Object> list = new19();
                push(goTo(12), list, false);
            }
            break;
            case 20: /* reduce ALeiaSLeiaM */
            {
                ArrayList<Object> list = new20();
                push(goTo(12), list, false);
            }
            break;
            case 21: /* reduce AEscrevaEst */
            {
                ArrayList<Object> list = new21();
                push(goTo(13), list, false);
            }
            break;
            case 22: /* reduce AEscrevaS */
            {
                ArrayList<Object> list = new22();
                push(goTo(14), list, false);
            }
            break;
            case 23: /* reduce AEscrevaM */
            {
                ArrayList<Object> list = new23();
                push(goTo(15), list, false);
            }
            break;
            case 24: /* reduce AEscrevaSEscrevaM */
            {
                ArrayList<Object> list = new24();
                push(goTo(15), list, false);
            }
            break;
            case 25: /* reduce AExp */
            {
                ArrayList<Object> list = new25();
                push(goTo(16), list, false);
            }
            break;
            case 26: /* reduce AVarExp */
            {
                ArrayList<Object> list = new26();
                push(goTo(16), list, false);
            }
            break;
            case 27: /* reduce AMenosExp */
            {
                ArrayList<Object> list = new27();
                push(goTo(16), list, false);
            }
            break;
            case 28: /* reduce AExp1 */
            {
                ArrayList<Object> list = new28();
                push(goTo(17), list, false);
            }
            break;
            case 29: /* reduce ANadaExp1 */
            {
                ArrayList<Object> list = new29();
                push(goTo(17), list, false);
            }
            break;
            case 30: /* reduce AMaisSoma */
            {
                ArrayList<Object> list = new30();
                push(goTo(18), list, false);
            }
            break;
            case 31: /* reduce AMenosSoma */
            {
                ArrayList<Object> list = new31();
                push(goTo(18), list, false);
            }
            break;
            case 32: /* reduce ATermo */
            {
                ArrayList<Object> list = new32();
                push(goTo(19), list, false);
            }
            break;
            case 33: /* reduce ATermo1 */
            {
                ArrayList<Object> list = new33();
                push(goTo(20), list, false);
            }
            break;
            case 34: /* reduce ANadaTermo1 */
            {
                ArrayList<Object> list = new34();
                push(goTo(20), list, false);
            }
            break;
            case 35: /* reduce AMultMult */
            {
                ArrayList<Object> list = new35();
                push(goTo(21), list, false);
            }
            break;
            case 36: /* reduce ADivMult */
            {
                ArrayList<Object> list = new36();
                push(goTo(21), list, false);
            }
            break;
            case 37: /* reduce AFator */
            {
                ArrayList<Object> list = new37();
                push(goTo(22), list, false);
            }
            break;
            case 38: /* reduce AValoorFator */
            {
                ArrayList<Object> list = new38();
                push(goTo(22), list, false);
            }
            break;
            case 39: /* reduce ATermoExpA */
            {
                ArrayList<Object> list = new39();
                push(goTo(23), list, false);
            }
            break;
            case 40: /* reduce AMaisExpA */
            {
                ArrayList<Object> list = new40();
                push(goTo(23), list, false);
            }
            break;
            case 41: /* reduce AVarExpA */
            {
                ArrayList<Object> list = new41();
                push(goTo(23), list, false);
            }
            break;
            case 42: /* reduce AMaisSomaA */
            {
                ArrayList<Object> list = new42();
                push(goTo(24), list, false);
            }
            break;
            case 43: /* reduce AMenosSomaA */
            {
                ArrayList<Object> list = new43();
                push(goTo(24), list, false);
            }
            break;
            case 44: /* reduce AFatTermoA */
            {
                ArrayList<Object> list = new44();
                push(goTo(25), list, false);
            }
            break;
            case 45: /* reduce AMultTermoA */
            {
                ArrayList<Object> list = new45();
                push(goTo(25), list, false);
            }
            break;
            case 46: /* reduce AMultMultA */
            {
                ArrayList<Object> list = new46();
                push(goTo(26), list, false);
            }
            break;
            case 47: /* reduce ADivMultA */
            {
                ArrayList<Object> list = new47();
                push(goTo(26), list, false);
            }
            break;
            case 48: /* reduce AExpressaoFatorA */
            {
                ArrayList<Object> list = new48();
                push(goTo(27), list, false);
            }
            break;
            case 49: /* reduce AValorFatorA */
            {
                ArrayList<Object> list = new49();
                push(goTo(27), list, false);
            }
            break;
            case 50: /* reduce AMenosFatorA */
            {
                ArrayList<Object> list = new50();
                push(goTo(27), list, false);
            }
            break;
            case 51: /* reduce AExpTermoExp */
            {
                ArrayList<Object> list = new51();
                push(goTo(28), list, false);
            }
            break;
            case 52: /* reduce AExp1TermoExp */
            {
                ArrayList<Object> list = new52();
                push(goTo(28), list, false);
            }
            break;
            case 53: /* reduce AExp2TermoExp */
            {
                ArrayList<Object> list = new53();
                push(goTo(28), list, false);
            }
            break;
            case 54: /* reduce AExp3TermoExp */
            {
                ArrayList<Object> list = new54();
                push(goTo(28), list, false);
            }
            break;
            case 55: /* reduce AExp4TermoExp */
            {
                ArrayList<Object> list = new55();
                push(goTo(28), list, false);
            }
            break;
            case 56: /* reduce AExp5TermoExp */
            {
                ArrayList<Object> list = new56();
                push(goTo(28), list, false);
            }
            break;
            case 57: /* reduce AExp6TermoExp */
            {
                ArrayList<Object> list = new57();
                push(goTo(28), list, false);
            }
            break;
            case 58: /* reduce AFatTermoExpl */
            {
                ArrayList<Object> list = new58();
                push(goTo(29), list, false);
            }
            break;
            case 59: /* reduce ATermTermoExpl */
            {
                ArrayList<Object> list = new59();
                push(goTo(29), list, false);
            }
            break;
            case 60: /* reduce ATerm1TermoExpl */
            {
                ArrayList<Object> list = new60();
                push(goTo(29), list, false);
            }
            break;
            case 61: /* reduce ATerm2TermoExpl */
            {
                ArrayList<Object> list = new61();
                push(goTo(29), list, false);
            }
            break;
            case 62: /* reduce ATermoExplogica */
            {
                ArrayList<Object> list = new62();
                push(goTo(30), list, false);
            }
            break;
            case 63: /* reduce ANaoExplogica */
            {
                ArrayList<Object> list = new63();
                push(goTo(30), list, false);
            }
            break;
            case 64: /* reduce ARepitaEst */
            {
                ArrayList<Object> list = new64();
                push(goTo(31), list, false);
            }
            break;
            case 65: /* reduce AForParaEst */
            {
                ArrayList<Object> list = new65();
                push(goTo(32), list, false);
            }
            break;
            case 66: /* reduce AForPassoParaEst */
            {
                ArrayList<Object> list = new66();
                push(goTo(32), list, false);
            }
            break;
            case 67: /* reduce AFor1 */
            {
                ArrayList<Object> list = new67();
                push(goTo(33), list, false);
            }
            break;
            case 68: /* reduce AFor2 */
            {
                ArrayList<Object> list = new68();
                push(goTo(34), list, false);
            }
            break;
            case 69: /* reduce AEnquantoEst */
            {
                ArrayList<Object> list = new69();
                push(goTo(35), list, false);
            }
            break;
            case 70: /* reduce ASeEst */
            {
                ArrayList<Object> list = new70();
                push(goTo(36), list, false);
            }
            break;
            case 71: /* reduce AElseSeEst */
            {
                ArrayList<Object> list = new71();
                push(goTo(36), list, false);
            }
            break;
            case 72: /* reduce ASeSen */
            {
                ArrayList<Object> list = new72();
                push(goTo(37), list, false);
            }
            break;
            case 73: /* reduce AAvalieEst */
            {
                ArrayList<Object> list = new73();
                push(goTo(38), list, false);
            }
            break;
            case 74: /* reduce AAvalieAvalieEst */
            {
                ArrayList<Object> list = new74();
                push(goTo(38), list, false);
            }
            break;
            case 75: /* reduce ACasoCasoM */
            {
                ArrayList<Object> list = new75();
                push(goTo(39), list, false);
            }
            break;
            case 76: /* reduce ACasoM */
            {
                ArrayList<Object> list = new76();
                push(goTo(39), list, false);
            }
            break;
            case 77: /* reduce ADeclComando */
            {
                ArrayList<Object> list = new77();
                push(goTo(40), list, false);
            }
            break;
            case 78: /* reduce AAtribuiComando */
            {
                ArrayList<Object> list = new78();
                push(goTo(40), list, false);
            }
            break;
            case 79: /* reduce ALeiaComando */
            {
                ArrayList<Object> list = new79();
                push(goTo(40), list, false);
            }
            break;
            case 80: /* reduce AEscreveraComando */
            {
                ArrayList<Object> list = new80();
                push(goTo(40), list, false);
            }
            break;
            case 81: /* reduce ARepitaComando */
            {
                ArrayList<Object> list = new81();
                push(goTo(40), list, false);
            }
            break;
            case 82: /* reduce AParaComando */
            {
                ArrayList<Object> list = new82();
                push(goTo(40), list, false);
            }
            break;
            case 83: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new83();
                push(goTo(40), list, false);
            }
            break;
            case 84: /* reduce ASeComando */
            {
                ArrayList<Object> list = new84();
                push(goTo(40), list, false);
            }
            break;
            case 85: /* reduce AAvalieComando */
            {
                ArrayList<Object> list = new85();
                push(goTo(40), list, false);
            }
            break;
            case 86: /* reduce AVazioComando */
            {
                ArrayList<Object> list = new86();
                push(goTo(40), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AStartStart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PProgramaEst pprogramaestNode2;
        pprogramaestNode2 = (PProgramaEst)nodeArrayList1.get(0);

        pstartNode1 = new AStartStart(pprogramaestNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AVazio */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PVazio pvazioNode1;
        {
            // Block

        pvazioNode1 = new AVazio();
        }
	nodeList.add(pvazioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AProgramaEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramaEst pprogramaestNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TInicio tinicioNode4;
        PDeclaracao pdeclaracaoNode5;
        PComando pcomandoNode6;
        TFimP tfimpNode7;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        pdeclaracaoNode5 = (PDeclaracao)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);
        tfimpNode7 = (TFimP)nodeArrayList6.get(0);

        pprogramaestNode1 = new AProgramaEst(tprogramaNode2, tidentificadorNode3, tinicioNode4, pdeclaracaoNode5, pcomandoNode6, tfimpNode7);
        }
	nodeList.add(pprogramaestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ADeclMDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipoVariavel ptipovariavelNode2;
        TDoisPontos tdoispontosNode3;
        PDeclM pdeclmNode4;
        TPontoVirgula tpontovirgulaNode5;
        ptipovariavelNode2 = (PTipoVariavel)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pdeclmNode4 = (PDeclM)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclMDeclaracao(ptipovariavelNode2, tdoispontosNode3, pdeclmNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConstante tconstanteNode2;
        TIdentificador tidentificadorNode3;
        PValor pvalorNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclaracao(tconstanteNode2, tidentificadorNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ADeclS */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclS pdeclsNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pdeclsNode1 = new ADeclS(pvariavelNode2);
        }
	nodeList.add(pdeclsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADeclM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclM pdeclmNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        TVirgula tvirgulaNode3;
        PDeclM pdeclmNode4;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pdeclmNode4 = (PDeclM)nodeArrayList3.get(0);

        pdeclmNode1 = new ADeclM(pvariavelNode2, tvirgulaNode3, pdeclmNode4);
        }
	nodeList.add(pdeclmNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADeclSDeclM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclM pdeclmNode1;
        {
            // Block
        PDeclS pdeclsNode2;
        pdeclsNode2 = (PDeclS)nodeArrayList1.get(0);

        pdeclmNode1 = new ADeclSDeclM(pdeclsNode2);
        }
	nodeList.add(pdeclmNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AVarNVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvariavelNode1 = new AVarNVariavel(tidentificadorNode2);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVarVVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TColcheteEsq tcolcheteesqNode3;
        TNumeroInt tnumerointNode4;
        TColcheteDir tcolchetedirNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tcolcheteesqNode3 = (TColcheteEsq)nodeArrayList2.get(0);
        tnumerointNode4 = (TNumeroInt)nodeArrayList3.get(0);
        tcolchetedirNode5 = (TColcheteDir)nodeArrayList4.get(0);

        pvariavelNode1 = new AVarVVariavel(tidentificadorNode2, tcolcheteesqNode3, tnumerointNode4, tcolchetedirNode5);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ANumIntValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroInt tnumerointNode2;
        tnumerointNode2 = (TNumeroInt)nodeArrayList1.get(0);

        pvalorNode1 = new ANumIntValor(tnumerointNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ANumRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANumRealValor(tnumerorealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ACharValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new ACharValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ANumeroRealTipoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoVariavel ptipovariavelNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipovariavelNode1 = new ANumeroRealTipoVariavel(trealNode2);
        }
	nodeList.add(ptipovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ANumIntTipoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoVariavel ptipovariavelNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipovariavelNode1 = new ANumIntTipoVariavel(tinteiroNode2);
        }
	nodeList.add(ptipovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ACaractereTipoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoVariavel ptipovariavelNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipovariavelNode1 = new ACaractereTipoVariavel(tcaractereNode2);
        }
	nodeList.add(ptipovariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAtribui */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtribui patribuiNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        patribuiNode1 = new AAtribui(pvariavelNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(patribuiNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ALeiaEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLeiaEst pleiaestNode1;
        {
            // Block
        TLeia tleiaNode2;
        TParenEsq tparenesqNode3;
        PLeiaM pleiamNode4;
        TParenDir tparendirNode5;
        TPontoVirgula tpontovirgulaNode6;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pleiamNode4 = (PLeiaM)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pleiaestNode1 = new ALeiaEst(tleiaNode2, tparenesqNode3, pleiamNode4, tparendirNode5, tpontovirgulaNode6);
        }
	nodeList.add(pleiaestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ALeiaS */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLeiaS pleiasNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pleiasNode1 = new ALeiaS(pvariavelNode2);
        }
	nodeList.add(pleiasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ALeiaM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLeiaM pleiamNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        TVirgula tvirgulaNode3;
        PLeiaM pleiamNode4;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pleiamNode4 = (PLeiaM)nodeArrayList3.get(0);

        pleiamNode1 = new ALeiaM(pvariavelNode2, tvirgulaNode3, pleiamNode4);
        }
	nodeList.add(pleiamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ALeiaSLeiaM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLeiaM pleiamNode1;
        {
            // Block
        PLeiaS pleiasNode2;
        pleiasNode2 = (PLeiaS)nodeArrayList1.get(0);

        pleiamNode1 = new ALeiaSLeiaM(pleiasNode2);
        }
	nodeList.add(pleiamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AEscrevaEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscrevaEst pescrevaestNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TParenEsq tparenesqNode3;
        PEscrevaM pescrevamNode4;
        TParenDir tparendirNode5;
        TPontoVirgula tpontovirgulaNode6;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pescrevamNode4 = (PEscrevaM)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pescrevaestNode1 = new AEscrevaEst(tescrevaNode2, tparenesqNode3, pescrevamNode4, tparendirNode5, tpontovirgulaNode6);
        }
	nodeList.add(pescrevaestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AEscrevaS */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscrevaS pescrevasNode1;
        {
            // Block
        PExp pexpNode2;
        pexpNode2 = (PExp)nodeArrayList1.get(0);

        pescrevasNode1 = new AEscrevaS(pexpNode2);
        }
	nodeList.add(pescrevasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AEscrevaM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscrevaM pescrevamNode1;
        {
            // Block
        PExp pexpNode2;
        TVirgula tvirgulaNode3;
        PEscrevaM pescrevamNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pescrevamNode4 = (PEscrevaM)nodeArrayList3.get(0);

        pescrevamNode1 = new AEscrevaM(pexpNode2, tvirgulaNode3, pescrevamNode4);
        }
	nodeList.add(pescrevamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AEscrevaSEscrevaM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscrevaM pescrevamNode1;
        {
            // Block
        PEscrevaS pescrevasNode2;
        pescrevasNode2 = (PEscrevaS)nodeArrayList1.get(0);

        pescrevamNode1 = new AEscrevaSEscrevaM(pescrevasNode2);
        }
	nodeList.add(pescrevamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        PExp1 pexp1Node3;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pexp1Node3 = (PExp1)nodeArrayList2.get(0);

        pexpNode1 = new AExp(ptermoNode2, pexp1Node3);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AVarExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pexpNode1 = new AVarExp(pvariavelNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AMenosExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TMenos tmenosNode2;
        PExp pexpNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        pexpNode1 = new AMenosExp(tmenosNode2, pexpNode3);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AExp1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp1 pexp1Node1;
        {
            // Block
        PSoma psomaNode2;
        PTermo ptermoNode3;
        PExp1 pexp1Node4;
        psomaNode2 = (PSoma)nodeArrayList1.get(0);
        ptermoNode3 = (PTermo)nodeArrayList2.get(0);
        pexp1Node4 = (PExp1)nodeArrayList3.get(0);

        pexp1Node1 = new AExp1(psomaNode2, ptermoNode3, pexp1Node4);
        }
	nodeList.add(pexp1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ANadaExp1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp1 pexp1Node1;
        {
            // Block
        PVazio pvazioNode2;
        pvazioNode2 = (PVazio)nodeArrayList1.get(0);

        pexp1Node1 = new ANadaExp1(pvazioNode2);
        }
	nodeList.add(pexp1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AMaisSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMais tmaisNode2;
        tmaisNode2 = (TMais)nodeArrayList1.get(0);

        psomaNode1 = new AMaisSoma(tmaisNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AMenosSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMenos tmenosNode2;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);

        psomaNode1 = new AMenosSoma(tmenosNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ATermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        PTermo1 ptermo1Node3;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        ptermo1Node3 = (PTermo1)nodeArrayList2.get(0);

        ptermoNode1 = new ATermo(pfatorNode2, ptermo1Node3);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ATermo1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo1 ptermo1Node1;
        {
            // Block
        PMult pmultNode2;
        PFator pfatorNode3;
        PTermo1 ptermo1Node4;
        pmultNode2 = (PMult)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);
        ptermo1Node4 = (PTermo1)nodeArrayList3.get(0);

        ptermo1Node1 = new ATermo1(pmultNode2, pfatorNode3, ptermo1Node4);
        }
	nodeList.add(ptermo1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ANadaTermo1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo1 ptermo1Node1;
        {
            // Block
        PVazio pvazioNode2;
        pvazioNode2 = (PVazio)nodeArrayList1.get(0);

        ptermo1Node1 = new ANadaTermo1(pvazioNode2);
        }
	nodeList.add(ptermo1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AMultMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TMultiplicacao tmultiplicacaoNode2;
        tmultiplicacaoNode2 = (TMultiplicacao)nodeArrayList1.get(0);

        pmultNode1 = new AMultMult(tmultiplicacaoNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ADivMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TDivInt tdivintNode2;
        tdivintNode2 = (TDivInt)nodeArrayList1.get(0);

        pmultNode1 = new ADivMult(tdivintNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TParenEsq tparenesqNode2;
        PExp pexpNode3;
        TParenDir tparendirNode4;
        tparenesqNode2 = (TParenEsq)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tparendirNode4 = (TParenDir)nodeArrayList3.get(0);

        pfatorNode1 = new AFator(tparenesqNode2, pexpNode3, tparendirNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AValoorFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AValoorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ATermoExpA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpA pexpaNode1;
        {
            // Block
        PTermoA ptermoaNode2;
        ptermoaNode2 = (PTermoA)nodeArrayList1.get(0);

        pexpaNode1 = new ATermoExpA(ptermoaNode2);
        }
	nodeList.add(pexpaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AMaisExpA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpA pexpaNode1;
        {
            // Block
        PExpA pexpaNode2;
        PSomaA psomaaNode3;
        PTermoA ptermoaNode4;
        pexpaNode2 = (PExpA)nodeArrayList1.get(0);
        psomaaNode3 = (PSomaA)nodeArrayList2.get(0);
        ptermoaNode4 = (PTermoA)nodeArrayList3.get(0);

        pexpaNode1 = new AMaisExpA(pexpaNode2, psomaaNode3, ptermoaNode4);
        }
	nodeList.add(pexpaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AVarExpA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpA pexpaNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pexpaNode1 = new AVarExpA(pvariavelNode2);
        }
	nodeList.add(pexpaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AMaisSomaA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaA psomaaNode1;
        {
            // Block
        TMais tmaisNode2;
        tmaisNode2 = (TMais)nodeArrayList1.get(0);

        psomaaNode1 = new AMaisSomaA(tmaisNode2);
        }
	nodeList.add(psomaaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AMenosSomaA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSomaA psomaaNode1;
        {
            // Block
        TMenos tmenosNode2;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);

        psomaaNode1 = new AMenosSomaA(tmenosNode2);
        }
	nodeList.add(psomaaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AFatTermoA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoA ptermoaNode1;
        {
            // Block
        PFatorA pfatoraNode2;
        pfatoraNode2 = (PFatorA)nodeArrayList1.get(0);

        ptermoaNode1 = new AFatTermoA(pfatoraNode2);
        }
	nodeList.add(ptermoaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AMultTermoA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoA ptermoaNode1;
        {
            // Block
        PTermoA ptermoaNode2;
        PMultA pmultaNode3;
        PFatorA pfatoraNode4;
        ptermoaNode2 = (PTermoA)nodeArrayList1.get(0);
        pmultaNode3 = (PMultA)nodeArrayList2.get(0);
        pfatoraNode4 = (PFatorA)nodeArrayList3.get(0);

        ptermoaNode1 = new AMultTermoA(ptermoaNode2, pmultaNode3, pfatoraNode4);
        }
	nodeList.add(ptermoaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AMultMultA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMultA pmultaNode1;
        {
            // Block
        TMultiplicacao tmultiplicacaoNode2;
        tmultiplicacaoNode2 = (TMultiplicacao)nodeArrayList1.get(0);

        pmultaNode1 = new AMultMultA(tmultiplicacaoNode2);
        }
	nodeList.add(pmultaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ADivMultA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMultA pmultaNode1;
        {
            // Block
        TDivInt tdivintNode2;
        tdivintNode2 = (TDivInt)nodeArrayList1.get(0);

        pmultaNode1 = new ADivMultA(tdivintNode2);
        }
	nodeList.add(pmultaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AExpressaoFatorA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorA pfatoraNode1;
        {
            // Block
        TParenEsq tparenesqNode2;
        PExplogica pexplogicaNode3;
        TParenDir tparendirNode4;
        tparenesqNode2 = (TParenEsq)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExplogica)nodeArrayList2.get(0);
        tparendirNode4 = (TParenDir)nodeArrayList3.get(0);

        pfatoraNode1 = new AExpressaoFatorA(tparenesqNode2, pexplogicaNode3, tparendirNode4);
        }
	nodeList.add(pfatoraNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AValorFatorA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorA pfatoraNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatoraNode1 = new AValorFatorA(pvalorNode2);
        }
	nodeList.add(pfatoraNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AMenosFatorA */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorA pfatoraNode1;
        {
            // Block
        TMenos tmenosNode2;
        PFatorA pfatoraNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pfatoraNode3 = (PFatorA)nodeArrayList2.get(0);

        pfatoraNode1 = new AMenosFatorA(tmenosNode2, pfatoraNode3);
        }
	nodeList.add(pfatoraNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AExpTermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PExpA pexpaNode2;
        pexpaNode2 = (PExpA)nodeArrayList1.get(0);

        ptermoexpNode1 = new AExpTermoExp(pexpaNode2);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AExp1TermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        TIgual tigualNode3;
        PExpA pexpaNode4;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        pexpaNode4 = (PExpA)nodeArrayList3.get(0);

        ptermoexpNode1 = new AExp1TermoExp(ptermoexpNode2, tigualNode3, pexpaNode4);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AExp2TermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        TDiferente tdiferenteNode3;
        PExpA pexpaNode4;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);
        tdiferenteNode3 = (TDiferente)nodeArrayList2.get(0);
        pexpaNode4 = (PExpA)nodeArrayList3.get(0);

        ptermoexpNode1 = new AExp2TermoExp(ptermoexpNode2, tdiferenteNode3, pexpaNode4);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AExp3TermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        TMenorIgual tmenorigualNode3;
        PExpA pexpaNode4;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);
        tmenorigualNode3 = (TMenorIgual)nodeArrayList2.get(0);
        pexpaNode4 = (PExpA)nodeArrayList3.get(0);

        ptermoexpNode1 = new AExp3TermoExp(ptermoexpNode2, tmenorigualNode3, pexpaNode4);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AExp4TermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        TMaiorIgual tmaiorigualNode3;
        PExpA pexpaNode4;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorIgual)nodeArrayList2.get(0);
        pexpaNode4 = (PExpA)nodeArrayList3.get(0);

        ptermoexpNode1 = new AExp4TermoExp(ptermoexpNode2, tmaiorigualNode3, pexpaNode4);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExp5TermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        TMenorQue tmenorqueNode3;
        PExpA pexpaNode4;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);
        tmenorqueNode3 = (TMenorQue)nodeArrayList2.get(0);
        pexpaNode4 = (PExpA)nodeArrayList3.get(0);

        ptermoexpNode1 = new AExp5TermoExp(ptermoexpNode2, tmenorqueNode3, pexpaNode4);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AExp6TermoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExp ptermoexpNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        TMaiorQue tmaiorqueNode3;
        PExpA pexpaNode4;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);
        tmaiorqueNode3 = (TMaiorQue)nodeArrayList2.get(0);
        pexpaNode4 = (PExpA)nodeArrayList3.get(0);

        ptermoexpNode1 = new AExp6TermoExp(ptermoexpNode2, tmaiorqueNode3, pexpaNode4);
        }
	nodeList.add(ptermoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AFatTermoExpl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExpl ptermoexplNode1;
        {
            // Block
        PTermoExp ptermoexpNode2;
        ptermoexpNode2 = (PTermoExp)nodeArrayList1.get(0);

        ptermoexplNode1 = new AFatTermoExpl(ptermoexpNode2);
        }
	nodeList.add(ptermoexplNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ATermTermoExpl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExpl ptermoexplNode1;
        {
            // Block
        PTermoExpl ptermoexplNode2;
        TE teNode3;
        PTermoExp ptermoexpNode4;
        ptermoexplNode2 = (PTermoExpl)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        ptermoexpNode4 = (PTermoExp)nodeArrayList3.get(0);

        ptermoexplNode1 = new ATermTermoExpl(ptermoexplNode2, teNode3, ptermoexpNode4);
        }
	nodeList.add(ptermoexplNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ATerm1TermoExpl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExpl ptermoexplNode1;
        {
            // Block
        PTermoExpl ptermoexplNode2;
        TOu touNode3;
        PTermoExp ptermoexpNode4;
        ptermoexplNode2 = (PTermoExpl)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        ptermoexpNode4 = (PTermoExp)nodeArrayList3.get(0);

        ptermoexplNode1 = new ATerm1TermoExpl(ptermoexplNode2, touNode3, ptermoexpNode4);
        }
	nodeList.add(ptermoexplNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ATerm2TermoExpl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoExpl ptermoexplNode1;
        {
            // Block
        PTermoExpl ptermoexplNode2;
        TXor txorNode3;
        PTermoExp ptermoexpNode4;
        ptermoexplNode2 = (PTermoExpl)nodeArrayList1.get(0);
        txorNode3 = (TXor)nodeArrayList2.get(0);
        ptermoexpNode4 = (PTermoExp)nodeArrayList3.get(0);

        ptermoexplNode1 = new ATerm2TermoExpl(ptermoexplNode2, txorNode3, ptermoexpNode4);
        }
	nodeList.add(ptermoexplNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ATermoExplogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplogica pexplogicaNode1;
        {
            // Block
        PTermoExpl ptermoexplNode2;
        ptermoexplNode2 = (PTermoExpl)nodeArrayList1.get(0);

        pexplogicaNode1 = new ATermoExplogica(ptermoexplNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ANaoExplogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExplogica pexplogicaNode1;
        {
            // Block
        TNao tnaoNode2;
        PExplogica pexplogicaNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExplogica)nodeArrayList2.get(0);

        pexplogicaNode1 = new ANaoExplogica(tnaoNode2, pexplogicaNode3);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ARepitaEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepitaEst prepitaestNode1;
        {
            // Block
        TRepita trepitaNode2;
        PComando pcomandoNode3;
        TAte tateNode4;
        PExplogica pexplogicaNode5;
        TPontoVirgula tpontovirgulaNode6;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        pexplogicaNode5 = (PExplogica)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        prepitaestNode1 = new ARepitaEst(trepitaNode2, pcomandoNode3, tateNode4, pexplogicaNode5, tpontovirgulaNode6);
        }
	nodeList.add(prepitaestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AForParaEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaEst pparaestNode1;
        {
            // Block
        TPara tparaNode2;
        PVariavel pvariavelNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        PFor1 pfor1Node6;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        pfor1Node6 = (PFor1)nodeArrayList5.get(0);

        pparaestNode1 = new AForParaEst(tparaNode2, pvariavelNode3, tdeNode4, tnumerointNode5, pfor1Node6);
        }
	nodeList.add(pparaestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AForPassoParaEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaEst pparaestNode1;
        {
            // Block
        TPara tparaNode2;
        PVariavel pvariavelNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        PFor2 pfor2Node6;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvariavelNode3 = (PVariavel)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        pfor2Node6 = (PFor2)nodeArrayList5.get(0);

        pparaestNode1 = new AForPassoParaEst(tparaNode2, pvariavelNode3, tdeNode4, tnumerointNode5, pfor2Node6);
        }
	nodeList.add(pparaestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AFor1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFor1 pfor1Node1;
        {
            // Block
        TAte tateNode2;
        TNumeroInt tnumerointNode3;
        TFaca tfacaNode4;
        PComando pcomandoNode5;
        TFimPara tfimparaNode6;
        TPontoVirgula tpontovirgulaNode7;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tnumerointNode3 = (TNumeroInt)nodeArrayList2.get(0);
        tfacaNode4 = (TFaca)nodeArrayList3.get(0);
        pcomandoNode5 = (PComando)nodeArrayList4.get(0);
        tfimparaNode6 = (TFimPara)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList6.get(0);

        pfor1Node1 = new AFor1(tateNode2, tnumerointNode3, tfacaNode4, pcomandoNode5, tfimparaNode6, tpontovirgulaNode7);
        }
	nodeList.add(pfor1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AFor2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFor2 pfor2Node1;
        {
            // Block
        TPasso tpassoNode2;
        TNumeroInt tnumerointNode3;
        PFor1 pfor1Node4;
        tpassoNode2 = (TPasso)nodeArrayList1.get(0);
        tnumerointNode3 = (TNumeroInt)nodeArrayList2.get(0);
        pfor1Node4 = (PFor1)nodeArrayList3.get(0);

        pfor2Node1 = new AFor2(tpassoNode2, tnumerointNode3, pfor1Node4);
        }
	nodeList.add(pfor2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AEnquantoEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnquantoEst penquantoestNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParenEsq tparenesqNode3;
        PExplogica pexplogicaNode4;
        TParenDir tparendirNode5;
        TFaca tfacaNode6;
        PComando pcomandoNode7;
        TFimEnquanto tfimenquantoNode8;
        TPontoVirgula tpontovirgulaNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExplogica)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcomandoNode7 = (PComando)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimEnquanto)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList8.get(0);

        penquantoestNode1 = new AEnquantoEst(tenquantoNode2, tparenesqNode3, pexplogicaNode4, tparendirNode5, tfacaNode6, pcomandoNode7, tfimenquantoNode8, tpontovirgulaNode9);
        }
	nodeList.add(penquantoestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ASeEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeEst pseestNode1;
        {
            // Block
        TSe tseNode2;
        TParenEsq tparenesqNode3;
        PExplogica pexplogicaNode4;
        TParenDir tparendirNode5;
        TEntao tentaoNode6;
        PComando pcomandoNode7;
        TFimSe tfimseNode8;
        TPontoVirgula tpontovirgulaNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExplogica)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandoNode7 = (PComando)nodeArrayList6.get(0);
        tfimseNode8 = (TFimSe)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList8.get(0);

        pseestNode1 = new ASeEst(tseNode2, tparenesqNode3, pexplogicaNode4, tparendirNode5, tentaoNode6, pcomandoNode7, tfimseNode8, tpontovirgulaNode9);
        }
	nodeList.add(pseestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AElseSeEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeEst pseestNode1;
        {
            // Block
        TSe tseNode2;
        TParenEsq tparenesqNode3;
        PExplogica pexplogicaNode4;
        TParenDir tparendirNode5;
        TEntao tentaoNode6;
        PComando pcomandoNode7;
        PSeSen psesenNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExplogica)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandoNode7 = (PComando)nodeArrayList6.get(0);
        psesenNode8 = (PSeSen)nodeArrayList7.get(0);

        pseestNode1 = new AElseSeEst(tseNode2, tparenesqNode3, pexplogicaNode4, tparendirNode5, tentaoNode6, pcomandoNode7, psesenNode8);
        }
	nodeList.add(pseestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ASeSen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSen psesenNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComando pcomandoNode3;
        TFimSe tfimseNode4;
        TPontoVirgula tpontovirgulaNode5;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);
        tfimseNode4 = (TFimSe)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        psesenNode1 = new ASeSen(tsenaoNode2, pcomandoNode3, tfimseNode4, tpontovirgulaNode5);
        }
	nodeList.add(psesenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AAvalieEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvalieEst pavalieestNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TParenEsq tparenesqNode3;
        PExp pexpNode4;
        TParenDir tparendirNode5;
        PCasoM pcasomNode6;
        TFimAvalie tfimavalieNode7;
        TPontoVirgula tpontovirgulaNode8;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        pcasomNode6 = (PCasoM)nodeArrayList5.get(0);
        tfimavalieNode7 = (TFimAvalie)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList7.get(0);

        pavalieestNode1 = new AAvalieEst(tavalieNode2, tparenesqNode3, pexpNode4, tparendirNode5, pcasomNode6, tfimavalieNode7, tpontovirgulaNode8);
        }
	nodeList.add(pavalieestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AAvalieAvalieEst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvalieEst pavalieestNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TParenEsq tparenesqNode3;
        PExp pexpNode4;
        TParenDir tparendirNode5;
        PCasoM pcasomNode6;
        TSenao tsenaoNode7;
        TDoisPontos tdoispontosNode8;
        PComando pcomandoNode9;
        TFimAvalie tfimavalieNode10;
        TPontoVirgula tpontovirgulaNode11;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tparenesqNode3 = (TParenEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tparendirNode5 = (TParenDir)nodeArrayList4.get(0);
        pcasomNode6 = (PCasoM)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        tdoispontosNode8 = (TDoisPontos)nodeArrayList7.get(0);
        pcomandoNode9 = (PComando)nodeArrayList8.get(0);
        tfimavalieNode10 = (TFimAvalie)nodeArrayList9.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList10.get(0);

        pavalieestNode1 = new AAvalieAvalieEst(tavalieNode2, tparenesqNode3, pexpNode4, tparendirNode5, pcasomNode6, tsenaoNode7, tdoispontosNode8, pcomandoNode9, tfimavalieNode10, tpontovirgulaNode11);
        }
	nodeList.add(pavalieestNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ACasoCasoM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoM pcasomNode1;
        {
            // Block
        PCasoM pcasomNode2;
        TCaso tcasoNode3;
        PValor pvalorNode4;
        TDoisPontos tdoispontosNode5;
        PComando pcomandoNode6;
        pcasomNode2 = (PCasoM)nodeArrayList1.get(0);
        tcasoNode3 = (TCaso)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tdoispontosNode5 = (TDoisPontos)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcasomNode1 = new ACasoCasoM(pcasomNode2, tcasoNode3, pvalorNode4, tdoispontosNode5, pcomandoNode6);
        }
	nodeList.add(pcasomNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ACasoM */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoM pcasomNode1;
        {
            // Block
        PVazio pvazioNode2;
        pvazioNode2 = (PVazio)nodeArrayList1.get(0);

        pcasomNode1 = new ACasoM(pvazioNode2);
        }
	nodeList.add(pcasomNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ADeclComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PDeclaracao pdeclaracaoNode2;
        PComando pcomandoNode3;
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new ADeclComando(pdeclaracaoNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AAtribuiComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAtribui patribuiNode2;
        PComando pcomandoNode3;
        patribuiNode2 = (PAtribui)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new AAtribuiComando(patribuiNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ALeiaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PLeiaEst pleiaestNode2;
        PComando pcomandoNode3;
        pleiaestNode2 = (PLeiaEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new ALeiaComando(pleiaestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AEscreveraComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PEscrevaEst pescrevaestNode2;
        PComando pcomandoNode3;
        pescrevaestNode2 = (PEscrevaEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new AEscreveraComando(pescrevaestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ARepitaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PRepitaEst prepitaestNode2;
        PComando pcomandoNode3;
        prepitaestNode2 = (PRepitaEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new ARepitaComando(prepitaestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PParaEst pparaestNode2;
        PComando pcomandoNode3;
        pparaestNode2 = (PParaEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new AParaComando(pparaestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PEnquantoEst penquantoestNode2;
        PComando pcomandoNode3;
        penquantoestNode2 = (PEnquantoEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new AEnquantoComando(penquantoestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeEst pseestNode2;
        PComando pcomandoNode3;
        pseestNode2 = (PSeEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new ASeComando(pseestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AAvalieComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PAvalieEst pavalieestNode2;
        PComando pcomandoNode3;
        pavalieestNode2 = (PAvalieEst)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        pcomandoNode1 = new AAvalieComando(pavalieestNode2, pcomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AVazioComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PVazio pvazioNode2;
        pvazioNode2 = (PVazio)nodeArrayList1.get(0);

        pcomandoNode1 = new AVazioComando(pvazioNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {31, SHIFT, 1}, },
			{{-1, ERROR, 1}, {51, SHIFT, 4}, },
			{{-1, ERROR, 2}, {52, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 4}, {30, SHIFT, 5}, },
			{{-1, ERROR, 5}, {27, SHIFT, 6}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, },
			{{-1, ERROR, 6}, {51, SHIFT, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 11}, {1, SHIFT, 33}, },
			{{-1, ERROR, 12}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, ERROR, 13}, {4, SHIFT, 38}, },
			{{-1, ERROR, 14}, {4, SHIFT, 39}, },
			{{-1, ERROR, 15}, {4, SHIFT, 40}, },
			{{-1, ERROR, 16}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 18}, {4, SHIFT, 43}, },
			{{-1, ERROR, 19}, {4, SHIFT, 44}, },
			{{-1, REDUCE, 8}, {6, SHIFT, 45}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 23}, {16, SHIFT, 47}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 32}, {42, SHIFT, 56}, },
			{{-1, ERROR, 33}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 37}, {2, SHIFT, 60}, },
			{{-1, ERROR, 38}, {4, SHIFT, 61}, {9, SHIFT, 62}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 39}, {51, SHIFT, 20}, },
			{{-1, ERROR, 40}, {4, SHIFT, 73}, {9, SHIFT, 74}, {47, SHIFT, 75}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 41}, {36, SHIFT, 84}, },
			{{-1, ERROR, 42}, {23, SHIFT, 85}, },
			{{-1, ERROR, 43}, {4, SHIFT, 73}, {9, SHIFT, 74}, {47, SHIFT, 75}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 44}, {4, SHIFT, 61}, {9, SHIFT, 62}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 45}, {48, SHIFT, 88}, },
			{{-1, REDUCE, 77}, },
			{{-1, ERROR, 47}, {4, SHIFT, 61}, {9, SHIFT, 62}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 58}, {2, SHIFT, 90}, },
			{{-1, REDUCE, 5}, {0, SHIFT, 91}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 61}, {4, SHIFT, 61}, {9, SHIFT, 62}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 62}, {4, SHIFT, 61}, {9, SHIFT, 62}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 66}, {5, SHIFT, 94}, },
			{{-1, REDUCE, 22}, {0, SHIFT, 95}, },
			{{-1, REDUCE, 1}, {8, SHIFT, 96}, {9, SHIFT, 97}, },
			{{-1, REDUCE, 1}, {10, SHIFT, 101}, {11, SHIFT, 102}, },
			{{-1, REDUCE, 18}, {0, SHIFT, 106}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 72}, {5, SHIFT, 107}, },
			{{-1, ERROR, 73}, {4, SHIFT, 73}, {9, SHIFT, 74}, {47, SHIFT, 75}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 74}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, ERROR, 75}, {4, SHIFT, 73}, {9, SHIFT, 74}, {47, SHIFT, 75}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 51}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 39}, {10, SHIFT, 114}, {11, SHIFT, 115}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 58}, {12, SHIFT, 117}, {13, SHIFT, 118}, {14, SHIFT, 119}, {15, SHIFT, 120}, {17, SHIFT, 121}, {18, SHIFT, 122}, },
			{{-1, REDUCE, 62}, {19, SHIFT, 123}, {20, SHIFT, 124}, {21, SHIFT, 125}, },
			{{-1, ERROR, 83}, {5, SHIFT, 126}, },
			{{-1, ERROR, 84}, {48, SHIFT, 127}, },
			{{-1, ERROR, 85}, {4, SHIFT, 73}, {9, SHIFT, 74}, {47, SHIFT, 75}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 86}, {5, SHIFT, 129}, },
			{{-1, ERROR, 87}, {5, SHIFT, 130}, },
			{{-1, ERROR, 88}, {7, SHIFT, 131}, },
			{{-1, ERROR, 89}, {2, SHIFT, 132}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 91}, {51, SHIFT, 20}, },
			{{-1, ERROR, 92}, {5, SHIFT, 134}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 94}, {2, SHIFT, 135}, },
			{{-1, ERROR, 95}, {4, SHIFT, 61}, {9, SHIFT, 62}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 100}, {4, SHIFT, 61}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 105}, {4, SHIFT, 61}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, ERROR, 106}, {51, SHIFT, 20}, },
			{{-1, ERROR, 107}, {2, SHIFT, 140}, },
			{{-1, ERROR, 108}, {5, SHIFT, 141}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 113}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 116}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, ERROR, 117}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 118}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 119}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 120}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 121}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 122}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 123}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 124}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 125}, {4, SHIFT, 73}, {9, SHIFT, 74}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, {51, SHIFT, 20}, },
			{{-1, ERROR, 126}, {22, SHIFT, 153}, },
			{{-1, ERROR, 127}, {23, SHIFT, 154}, {37, SHIFT, 155}, },
			{{-1, ERROR, 128}, {2, SHIFT, 158}, },
			{{-1, ERROR, 129}, {38, SHIFT, 159}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 1}, {8, SHIFT, 96}, {9, SHIFT, 97}, },
			{{-1, REDUCE, 1}, {10, SHIFT, 101}, {11, SHIFT, 102}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 40}, {10, SHIFT, 114}, {11, SHIFT, 115}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 56}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 54}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 57}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 55}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 52}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 53}, {8, SHIFT, 111}, {9, SHIFT, 112}, },
			{{-1, REDUCE, 59}, {12, SHIFT, 117}, {13, SHIFT, 118}, {14, SHIFT, 119}, {15, SHIFT, 120}, {17, SHIFT, 121}, {18, SHIFT, 122}, },
			{{-1, REDUCE, 60}, {12, SHIFT, 117}, {13, SHIFT, 118}, {14, SHIFT, 119}, {15, SHIFT, 120}, {17, SHIFT, 121}, {18, SHIFT, 122}, },
			{{-1, REDUCE, 61}, {12, SHIFT, 117}, {13, SHIFT, 118}, {14, SHIFT, 119}, {15, SHIFT, 120}, {17, SHIFT, 121}, {18, SHIFT, 122}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 154}, {48, SHIFT, 165}, },
			{{-1, ERROR, 155}, {48, SHIFT, 166}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 161}, {40, SHIFT, 168}, {41, SHIFT, 169}, {43, SHIFT, 170}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 164}, {46, SHIFT, 171}, },
			{{-1, ERROR, 165}, {22, SHIFT, 172}, },
			{{-1, ERROR, 166}, {23, SHIFT, 154}, },
			{{-1, ERROR, 167}, {40, SHIFT, 174}, {44, SHIFT, 175}, },
			{{-1, ERROR, 168}, {1, SHIFT, 177}, },
			{{-1, ERROR, 169}, {48, SHIFT, 34}, {49, SHIFT, 35}, {50, SHIFT, 36}, },
			{{-1, ERROR, 170}, {2, SHIFT, 179}, },
			{{-1, ERROR, 171}, {2, SHIFT, 180}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 175}, {2, SHIFT, 183}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 178}, {1, SHIFT, 185}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 181}, {45, SHIFT, 186}, },
			{{-1, ERROR, 182}, {44, SHIFT, 187}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 184}, {43, SHIFT, 188}, },
			{{-1, REDUCE, 1}, {24, SHIFT, 13}, {25, SHIFT, 14}, {26, SHIFT, 15}, {27, SHIFT, 6}, {28, SHIFT, 16}, {29, SHIFT, 17}, {32, SHIFT, 7}, {33, SHIFT, 8}, {34, SHIFT, 9}, {35, SHIFT, 18}, {39, SHIFT, 19}, {51, SHIFT, 20}, },
			{{-1, ERROR, 186}, {2, SHIFT, 190}, },
			{{-1, ERROR, 187}, {2, SHIFT, 191}, },
			{{-1, ERROR, 188}, {2, SHIFT, 192}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 74}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 21}, {68, 98}, {69, 103}, {130, 160}, {137, 98}, {138, 103}, },
			{{-1, 3}, },
			{{-1, 22}, {5, 10}, },
			{{-1, 57}, },
			{{-1, 58}, {91, 133}, },
			{{-1, 23}, {16, 41}, {33, 59}, {38, 63}, {39, 70}, {40, 76}, {43, 76}, {44, 63}, {47, 63}, {61, 63}, {62, 63}, {73, 76}, {75, 76}, {85, 76}, {91, 59}, {95, 63}, {106, 70}, {117, 76}, {118, 76}, {119, 76}, {120, 76}, {121, 76}, {122, 76}, {123, 76}, {124, 76}, {125, 76}, },
			{{-1, 77}, {12, 37}, {38, 64}, {44, 64}, {47, 64}, {61, 64}, {62, 64}, {95, 64}, {100, 64}, {105, 64}, {169, 178}, },
			{{-1, 11}, },
			{{-1, 24}, },
			{{-1, 25}, },
			{{-1, 71}, },
			{{-1, 72}, {106, 139}, },
			{{-1, 26}, },
			{{-1, 65}, },
			{{-1, 66}, {95, 136}, },
			{{-1, 67}, {44, 87}, {47, 89}, {61, 92}, {62, 93}, },
			{{-1, 99}, {137, 162}, },
			{{-1, 100}, },
			{{-1, 68}, {100, 137}, },
			{{-1, 104}, {138, 163}, },
			{{-1, 105}, },
			{{-1, 69}, {105, 138}, },
			{{-1, 78}, {117, 144}, {118, 145}, {119, 146}, {120, 147}, {121, 148}, {122, 149}, },
			{{-1, 113}, },
			{{-1, 79}, {113, 142}, },
			{{-1, 116}, },
			{{-1, 80}, {74, 109}, {116, 143}, },
			{{-1, 81}, {123, 150}, {124, 151}, {125, 152}, },
			{{-1, 82}, },
			{{-1, 83}, {43, 86}, {73, 108}, {75, 110}, {85, 128}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 156}, {166, 173}, },
			{{-1, 157}, },
			{{-1, 29}, },
			{{-1, 30}, },
			{{-1, 176}, },
			{{-1, 31}, },
			{{-1, 161}, },
			{{-1, 32}, {17, 42}, {22, 46}, {24, 48}, {25, 49}, {26, 50}, {27, 51}, {28, 52}, {29, 53}, {30, 54}, {31, 55}, {153, 164}, {159, 167}, {172, 181}, {174, 182}, {177, 184}, {185, 189}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'const', 'real', 'inteiro', 'caractere'",
			"expecting: ':'",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'fim.', identificador",
			"expecting: numero int, numero real, string",
			"expecting: '('",
			"expecting: 'ate', 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', identificador",
			"expecting: ',', ';', ')', '[', '+', '-', '<', '<=', '>', '>=', '<-', '=', '<>', 'e', 'ou', 'xor', 'de'",
			"expecting: 'ate', 'senao', 'caso', 'fim.', 'fim avalie', 'fim se', 'fim para', 'fim enquanto'",
			"expecting: 'ate', 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'senao', 'caso', 'fim.', 'fim avalie', 'fim se', 'fim para', 'fim enquanto', identificador",
			"expecting: '<-'",
			"expecting: 'fim.'",
			"expecting: ',', ':', ';', ')', '+', '-', '*', '/', '<', '<=', '>', '>=', '=', '<>', 'e', 'ou', 'xor'",
			"expecting: ';'",
			"expecting: '(', '-', numero int, numero real, string, identificador",
			"expecting: '(', '-', 'nao', numero int, numero real, string, identificador",
			"expecting: 'de'",
			"expecting: 'ate'",
			"expecting: numero int",
			"expecting: ',', ';'",
			"expecting: ',', ';', ')'",
			"expecting: ',', ';', ')', '+', '-', '*', '/'",
			"expecting: ')'",
			"expecting: ',', ')'",
			"expecting: ',', ';', ')', '+', '-'",
			"expecting: '(', '-', numero int, numero real, string",
			"expecting: ';', ')', '+', '-', '<', '<=', '>', '>=', '=', '<>', 'e', 'ou', 'xor'",
			"expecting: ';', ')', '+', '-', '*', '/', '<', '<=', '>', '>=', '=', '<>', 'e', 'ou', 'xor'",
			"expecting: ';', ')', '<', '<=', '>', '>=', '=', '<>', 'e', 'ou', 'xor'",
			"expecting: ';', ')', 'e', 'ou', 'xor'",
			"expecting: ']'",
			"expecting: '(', numero int, numero real, string",
			"expecting: ';', ')'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: 'entao'",
			"expecting: 'senao', 'caso', 'fim avalie'",
			"expecting: ',', ';', ')', '+', '-', '<', '<=', '>', '>=', '<-', '=', '<>', 'e', 'ou', 'xor', 'de'",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'fim enquanto', identificador",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'senao', 'fim se', identificador",
			"expecting: 'fim enquanto'",
			"expecting: 'senao', 'fim se'",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'fim para', identificador",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'fim se', identificador",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'fim avalie', identificador",
			"expecting: 'fim para'",
			"expecting: 'fim se'",
			"expecting: 'fim avalie'",
			"expecting: 'escreva', 'leia', 'enquanto', 'const', 'para', 'repita', 'real', 'inteiro', 'caractere', 'se', 'avalie', 'senao', 'caso', 'fim avalie', identificador",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 1, 5, 5, 5, 6, 5, 7, 8, 8, 8, 1, 9, 8, 8, 10, 11, 12, 13, 12, 12, 12, 12, 12, 12, 12, 12, 14, 1, 15, 15, 15, 16, 17, 1, 18, 19, 20, 18, 17, 21, 11, 17, 11, 11, 11, 11, 11, 11, 11, 11, 2, 16, 16, 22, 12, 17, 17, 23, 24, 25, 25, 26, 27, 24, 26, 25, 25, 18, 28, 18, 29, 30, 29, 30, 30, 31, 32, 25, 21, 18, 25, 25, 33, 16, 12, 1, 25, 23, 16, 17, 34, 34, 23, 23, 34, 34, 34, 27, 27, 34, 1, 16, 25, 30, 35, 28, 28, 28, 28, 28, 28, 17, 17, 17, 17, 17, 17, 17, 17, 17, 36, 37, 16, 38, 39, 40, 12, 16, 24, 12, 25, 27, 24, 25, 12, 30, 30, 30, 29, 29, 29, 29, 29, 29, 31, 31, 31, 41, 21, 21, 12, 12, 12, 42, 39, 39, 23, 27, 43, 36, 20, 44, 5, 7, 16, 16, 45, 12, 46, 16, 12, 47, 5, 12, 12, 48, 49, 12, 50, 51, 16, 16, 16, 39, 12, 12, 12, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
